@* @model IEnumerable<MyCoreMVC.Models.TodoModel>

@{
    List<string> myList = new List<string>();
    myList.Add("Ma-aruf");
    myList.Add("Burad");
    
    var actionStatus = "Create";
}

<div class="container" style="text-align:center;">
    @if (Model.Count() > 0)
    {
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Task Name</th>
                    <th>Status</th>
                    
                </tr>
            </thead>
            @foreach (var todo in Model)
            {
                <tbody>
                    <tr>
                        <td>@todo.TaskId</td>
                        <td>@todo.TaskName</td>
                        <td>@todo.TaskStatus</td>
                    </tr>
                </tbody>
            }
        </table>
    }
    else
    {
        <table class="table table-bordered table-striped" style="width:100%">
            <thead>
                <tr>
                    <th>Task Name</th>
                    <th>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#myModal" id="myModal"><i class="fas fa-plus"></i>&nbsp;Add</button>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var obj in myList)
                {
                    <tr>
                        <td width="50%">@obj</td>
                        <td class="text-center">
                            <div class="w-75 btn-group" role="group">
                                @* <a asp-controller="Category" asp-route-Id="@obj" asp-action="Edit" class="btn btn-primary mx-2">
                                    <i class="fas fa-edit"></i>
                                </a> 

                                @*
                                    We will set An attribute to the todo-Edit Button
                                
                                <a id="todo-edit" class="btn btn-primary mx-2">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a asp-controller="Category" asp-route-Id="@obj" asp-action="Delete" class="btn btn-danger mx-2">
                                    <i class="fas fa-trash-alt"></i>
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div> *@



<div class="container" style="text-align:center;">
    <table class="table table-bordered table-striped" style="width:100%">
        <thead>
            <tr>
                <th>Task Name</th>
                <th>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#myModal" id="myModal"><i class="fas fa-plus"></i>&nbsp;Add</button>
                </th>
            </tr>
        </thead>
        <tbody id="category-table-body">
            @* <tr>
                <td width="50%" id="table-task-name"></td>
                <td class="text-center">
                    <div class="w-75 btn-group" role="group">
                        <a id="todo-edit" class="btn btn-primary mx-2">
                            <i class="fas fa-edit"></i>
                        </a>
                        <a class="btn btn-danger mx-2">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                    </div>
                </td>
            </tr> *@
        </tbody>
    </table>
</div>




<!-- Modal -->
<div class="modal fade" tabindex="-1" role="dialog" id="ModalPopup">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Task</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @*
                    We need to make this Form reusable by the edit action by changing the attributes value into edit
                    <form method="post" asp-action="Create" class="form-container">
                *@
                <form action="javascript:void(0);" method="POST" class="form-container" onsubmit="addItems()">
                    <div  class="text-danger"></div>
                    <div class="form-field">
                        <label for="">Task Name</label>
                        <input type="text" class="input-field" id="todo-task-name">
                        <input type="submit" value="Add">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary">Save changes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>

    var editBtn = document.getElementById('todo-edit');
    let tableBody = document.getElementById('category-table-body')
    let addItemName = document.getElementById('todo-task-name');
    const uri = 'api/todolistapi';
    let todos = []

    getItems().then(data => console.log(data));

    // This is intended for testing
    let listTask = [];

    async function getItems()
    {
        let response = await fetch(`${uri}/GetItems`);
        let data = await response.json();
        return data;
    }

    async function addItems()
    {
        const item = {
            TaskName: addItemName.value.trim(),
            TaskStatus: "Incomplete"
        }

        await fetch(`${uri}/AddItems`, {
            method: "POST",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json' 
            },
            body: JSON.stringify(item)
        })
        .then(response => response.json())
        .then(() => {
            getItems();
            addItemName.value = '';
        })
        .catch(error => console.error('Unable to add items', error));
    }

    listTask.push("Study");
    listTask.push("Eat");
    listTask.push("Sleep");

    @* for (let i=0; i<listTask.length; i++)
    {
        var tr = document.createElement("tr");

        tr.innerHTML = `<td width="50%" id="table-task-name">${listTask[i]}</td>
                            <td class="text-center">
                                <div class="w-75 btn-group" role="group">
                                    <a id="todo-edit" class="btn btn-primary mx-2">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a class="btn btn-danger mx-2">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>
                            </div>
                        </td>`

        tableBody.appendChild(tr);
        console.log(listTask[i]);
    } *@

</script>

<style>
    .form-field{
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 1rem;
    }
    .input-field{
        height: 2rem;
        border: 0.1rem solid black;
        border-radius: 1rem;
        text-align: center;
    }
    label{
        font-size: 1.2rem;
        text-align: center;
    }



</style>